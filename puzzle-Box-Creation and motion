var puzzle = function (slotNumber, plyrCntrl, plyrNmbr) { 
            'use strict';
               
                // Math.floor() drops the remainder, so this will be:
                // 0 0 0 1 1 1 2 2 2 ....
                var leftPos = (35+(70*(Math.floor(slotNumber/3))))+((plyrNmbr)*850);
                
                // the Modulus operator (%) is the remainder after division:
                // 0 1 2 0 1 2 0 1 2 ....
                var topPos = (35+(70*(slotNumber % 3)))*(Math.floor(plyrNmbr/3) + 1);
                
                
                playerSoul[plyrNmbr][slotNumber].leftPos= leftPos;
                playerSoul[plyrNmbr][slotNumber].topPos= topPos;
                
            createObj("graphic", {
                name: soul[slotNumber].name,
                imgsrc: soul[slotNumber].slot,
                left:leftPos,
                top:topPos,
                width:70,
                height:70,
                pageid:Campaign().get("playerpageid"),
                layer:"map",
                controlledby: plyrCntrl
                    
            });
        
};





var moveElem = function (slotNumber, plyrNmbr) {
    //checks if an element is in same slot as a null place holder then replaces it 
    if (playerSoul[plyrNmbr][slotNumber].element===6){ 
        var swapper = playerSoul[plyrNmbr][slotNumber].elemId;
        playerSoul[plyrNmbr][slotNumber].elemId = transElem[plyrNmbr].elemId;
        transElem[plyrNmbr].elemId = swapper
        
        var swapper2 =  playerSoul[plyrNmbr][slotNumber].elemObj
        playerSoul[plyrNmbr][slotNumber].elemObj = transElem[plyrNmbr].elemObj
        transElem[plyrNmbr].elemObj = swapper2
        
        playerSoul[plyrNmbr][slotNumber].element = transElem[plyrNmbr].element;
        transElem[plyrNmbr].end = -1;
        
        //CHECKER
        log("MOVEELEM CANCELLED replace X"+" "+playerSoul[plyrNmbr][slotNumber].element)
    }
    //checks if elements in same slot are opposites then destroys them and adds a "Null" place holder
    else if ((+transElem[plyrNmbr].element !== +playerSoul[plyrNmbr][slotNumber].element) && ((transElem[plyrNmbr].element % 3) === (playerSoul[plyrNmbr][slotNumber].element % 3))) {
        (playerSoul[plyrNmbr][slotNumber].elemObj).remove();
        transElem[plyrNmbr].end = -1;
          
          playerSoul[plyrNmbr][slotNumber].elemObj = createObj("graphic", {
            name: element[6].name,
            imgsrc: element[6].type,
            left:playerSoul[plyrNmbr][slotNumber].leftPos,
            top:playerSoul[plyrNmbr][slotNumber].topPos,
            width:70,
            height:70,
            pageid:Campaign().get("playerpageid"), 
            layer:"objects",
        });   
        playerSoul[plyrNmbr][slotNumber].number = slotNumber
        playerSoul[plyrNmbr][slotNumber].element = 6
        playerSoul[plyrNmbr][slotNumber].direction = 0
        
        //CHECKER
        log("ELEMENTS CANCELLED, slot number"+" "+playerSoul[plyrNmbr][slotNumber].number)
        
    }
    //destroys a moving element if its next move would take it out of the puzzlebox
    else if (((transElem[plyrNmbr].slot===2 || transElem[plyrNmbr].slot===5 || transElem[plyrNmbr].slot===8) && (transElem[plyrNmbr].direction === 1)) 
    || ((transElem[plyrNmbr].slot===6 || transElem[plyrNmbr].slot===7 || transElem[plyrNmbr].slot===8) && (transElem[plyrNmbr].direction === 3))
    || ((transElem[plyrNmbr].slot===0 || transElem[plyrNmbr].slot===3 || transElem[plyrNmbr].slot===6) && (transElem[plyrNmbr].direction === -1))
    || ((transElem[plyrNmbr].slot===0 || transElem[plyrNmbr].slot===1 || transElem[plyrNmbr].slot===2) && (transElem[plyrNmbr].direction === -3))){
        
        transElem[plyrNmbr].end = -1;
        
        var swap = playerSoul[plyrNmbr][slotNumber].elemId;
        playerSoul[plyrNmbr][slotNumber].elemId = transElem[plyrNmbr].elemId;
        transElem[plyrNmbr].elemId = swap;
        
        var swapB = playerSoul[plyrNmbr][slotNumber].elemObj;
        playerSoul[plyrNmbr][slotNumber].elemObj = transElem[plyrNmbr].elemObj;
        transElem[plyrNmbr].elemObj = swapB;
        
        var swap2 = playerSoul[plyrNmbr][slotNumber].element;
        playerSoul[plyrNmbr][slotNumber].element = transElem[plyrNmbr].element;
        transElem[plyrNmbr].element = swap2;
        
        //Checker
        log("Elem that should be in end slot"+playerSoul[plyrNmbr][slotNumber].element);
        
    }
    //This swaps the attributes of the slot element and the transition element then moves the transition element out of the slot
    else {
        var swap3 = playerSoul[plyrNmbr][slotNumber].elemId;
        playerSoul[plyrNmbr][slotNumber].elemId = transElem[plyrNmbr].elemId;
        transElem[plyrNmbr].elemId = swap3;
        
        var swap3B = playerSoul[plyrNmbr][slotNumber].elemObj;
        playerSoul[plyrNmbr][slotNumber].elemObj = transElem[plyrNmbr].elemObj;
        transElem[plyrNmbr].elemObj = swap3B;
        //log("this variable swaps ids" + swap3)
        
        var swap4 = playerSoul[plyrNmbr][slotNumber].element;
        playerSoul[plyrNmbr][slotNumber].element = transElem[plyrNmbr].element;
        transElem[plyrNmbr].element = swap4;
            
            if (transElem[plyrNmbr].slot === 0) {
                placeAura(plyrNmbr)
            };
            
        var num = transElem[plyrNmbr].slot
        var dir = transElem[plyrNmbr].direction
        var slotMove = (num + dir);
        transElem[plyrNmbr].leftPos = playerSoul[plyrNmbr][slotMove].leftPos;
        transElem[plyrNmbr].topPos = playerSoul[plyrNmbr][slotMove].topPos;
        transElem[plyrNmbr].slot = slotMove;
        
        (transElem[plyrNmbr].elemObj).set ("left", transElem[plyrNmbr].leftPos);
        (transElem[plyrNmbr].elemObj).set ("top", transElem[plyrNmbr].topPos);
        
        //Checker
        log("transElem start slot" + num);
        log("transElem should move to these top,left" + (transElem[plyrNmbr].topPos)+" "+(transElem[plyrNmbr].leftPos))
        log("transElem end slot"+slotMove)   
    };   
            if (transElem[plyrNmbr].end !== -1){
                moveElem (transElem[plyrNmbr].slot, plyrNmbr)
            }
           else {
                transElem[plyrNmbr].elemObj.remove()
        
            };

};





//This function is called to insert a random element into the left or top of the puzzlebox
var randomInsert = function (elem, slot, plyrNmbr) {
        'use strict';
        
        var actualSlot = randomNumber[slot].actualSlot;
       
            if(slot<3){
                transElem[plyrNmbr].direction=3
            }
            else{
                transElem[plyrNmbr].direction=1
            };
            
    transElem[plyrNmbr].elemObj = createObj("graphic", {
                name: element[elem].name,
                imgsrc: element[elem].type,
                left:playerSoul[plyrNmbr][actualSlot].leftPos,
                top:playerSoul[plyrNmbr][actualSlot].topPos,
                width:70,
                height:70,
                pageid:Campaign().get("playerpageid"), 
                layer:"objects",
                controlledby: state.playerIndex[plyrNmbr],
        });
        
        transElem[plyrNmbr].elemId = (transElem[plyrNmbr].elemObj).id
        transElem[plyrNmbr].element=elem
        transElem[plyrNmbr].name=element[elem].name
        transElem[plyrNmbr].leftPos=playerSoul[plyrNmbr][actualSlot].leftPos
        transElem[plyrNmbr].topPos=playerSoul[plyrNmbr][actualSlot].topPos
        transElem[plyrNmbr].slot=actualSlot
        transElem[plyrNmbr].end = 0
        
        log ("insert location top,left"+transElem[plyrNmbr].topPos+" "+transElem[plyrNmbr].leftPos);
        log("transElemNumber"+transElem[plyrNmbr].slot);
        log("TransElemElem"+transElem[plyrNmbr].element)
        
};

//This function is called to insert a chosen element from the bottom or right side fo the puzzle box
var choiceInsert = function (elem, slot, plyrNmbr) {
        'use strict';
        
        var actualSlot = chosenNumber[slot].actualSlot;
       
            if(slot<3){
                transElem[plyrNmbr].direction=-1
            }
            else{
                transElem[plyrNmbr].direction=-3
            };
            
    transElem[plyrNmbr].elemObj = createObj("graphic", {
                name: element[elem].name,
                imgsrc: element[elem].type,
                left:playerSoul[plyrNmbr][actualSlot].leftPos,
                top:playerSoul[plyrNmbr][actualSlot].topPos,
                width:70,
                height:70,
                pageid:Campaign().get("playerpageid"), 
                layer:"objects",
                controlledby: state.playerIndex[plyrNmbr]
        });
        
        transElem[plyrNmbr].elemId = (transElem[plyrNmbr].elemObj).id
        transElem[plyrNmbr].element=elem
        transElem[plyrNmbr].name=element[elem].name
        transElem[plyrNmbr].leftPos=playerSoul[plyrNmbr][actualSlot].leftPos
        transElem[plyrNmbr].topPos=playerSoul[plyrNmbr][actualSlot].topPos
        transElem[plyrNmbr].slot=actualSlot
        transElem[plyrNmbr].end = 0
        
        log("transElem left Pos at choice"+transElem[plyrNmbr].leftPos)
};


//This function fills the puzzle box with random elements
var elemStart = function(slotNumber, plyrNmbr) {
    
    playerSoul[plyrNmbr][slotNumber].element=Math.floor(Math.random() * 6);        
    playerSoul[plyrNmbr][slotNumber].number=slotNumber;
        
    
    var elemType = playerSoul[plyrNmbr][slotNumber].element;
    playerSoul[plyrNmbr][slotNumber].name=element[elemType].name;
        
        elemNew = createObj("graphic", {
            name: element[elemType].name,
            imgsrc: element[elemType].type ,
            left:playerSoul[plyrNmbr][slotNumber].leftPos,
            top:playerSoul[plyrNmbr][slotNumber].topPos,
            width:70,
            height:70,
            pageid:Campaign().get("playerpageid"), 
            layer:"objects",
            controlledby: state.playerIndex[plyrNmbr]
            
        });
         playerSoul[plyrNmbr][slotNumber].elemObj = elemNew
         playerSoul[plyrNmbr][slotNumber].elemId = elemNew.id; 
         log("plyrNmbr at elemStart"+plyrNmbr)
         
         
}; 

//places aura around character based on element in slot

var placeAura = function(plyrNmbr){
    if (playerSoul[plyrNmbr][0].element !== 6){
    for(var y=0; y<9; y++){    
        if (plyrCharAura[plyrNmbr][y].auraObj !== 0){
            plyrCharAura[plyrNmbr][y].auraObj.remove()
        };
        
        var elemType = playerSoul[plyrNmbr][0].element;
        log ("elemtype at change graphic"+elemType)
        var leftPosAura = ((state.playerCharInfo[plyrNmbr].charLeftPos)+(70*(Math.floor(y/3)- 1)));
        var topPosAura = ((state.playerCharInfo[plyrNmbr].charTopPos)+(70*((y % 3) - 1)));
                
        var playerAura = createObj("graphic", {
        name: tableElementTypes[0][elemType].name,
        imgsrc: tableElementTypes[0][elemType].imgsrc,
        left:leftPosAura,
        top:topPosAura,
        width:70,
        height:70,
        pageid:Campaign().get("playerpageid"), 
        layer:"map",
        controlledby: state.playerIndex[plyrNmbr]
                    
        });
        plyrCharAura[plyrNmbr][y].leftPos = leftPosAura;
        plyrCharAura[plyrNmbr][y].topPos = topPosAura;
        plyrCharAura[plyrNmbr][y].element = elemType;
        plyrCharAura[plyrNmbr][y].auraObj = playerAura;                    
    }
    }
}

    
